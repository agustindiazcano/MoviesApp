{"ast":null,"code":"import { useEffect, useMemo, useState } from 'react';\nimport debounce from './lib/debounce';\nimport flattenOptions from './lib/flattenOptions';\nexport default function useFetch(q, defaultOptions, {\n  debounceTime,\n  filterOptions,\n  getOptions\n}) {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState(() => flattenOptions(defaultOptions));\n  const fetch = useMemo(() => {\n    const filter = filterOptions || (op => () => op);\n\n    if (!getOptions) {\n      return s => setOptions(flattenOptions(filter(defaultOptions)(s)));\n    }\n\n    return debounce(s => {\n      const optionsReq = getOptions(s, defaultOptions);\n      setFetching(true);\n      Promise.resolve(optionsReq).then(newOptions => {\n        setOptions(flattenOptions(filter(newOptions)(s)));\n      }).finally(() => setFetching(false));\n    }, debounceTime);\n  }, [filterOptions, defaultOptions, getOptions, debounceTime]);\n  useEffect(() => setOptions(defaultOptions), [defaultOptions]);\n  useEffect(() => fetch(q), [fetch, q]);\n  return {\n    options,\n    setOptions,\n    fetching\n  };\n}","map":{"version":3,"sources":["/home/mayortom/OMDB/25-OMDB/node_modules/react-select-search/dist/esm/useFetch.js"],"names":["useEffect","useMemo","useState","debounce","flattenOptions","useFetch","q","defaultOptions","debounceTime","filterOptions","getOptions","fetching","setFetching","options","setOptions","fetch","filter","op","s","optionsReq","Promise","resolve","then","newOptions","finally"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,eAAe,SAASC,QAAT,CAAkBC,CAAlB,EAAqBC,cAArB,EAAqC;AAClDC,EAAAA,YADkD;AAElDC,EAAAA,aAFkD;AAGlDC,EAAAA;AAHkD,CAArC,EAIZ;AACD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,MAAME,cAAc,CAACG,cAAD,CAArB,CAAtC;AACA,QAAMQ,KAAK,GAAGd,OAAO,CAAC,MAAM;AAC1B,UAAMe,MAAM,GAAGP,aAAa,KAAKQ,EAAE,IAAI,MAAMA,EAAjB,CAA5B;;AAEA,QAAI,CAACP,UAAL,EAAiB;AACf,aAAOQ,CAAC,IAAIJ,UAAU,CAACV,cAAc,CAACY,MAAM,CAACT,cAAD,CAAN,CAAuBW,CAAvB,CAAD,CAAf,CAAtB;AACD;;AAED,WAAOf,QAAQ,CAACe,CAAC,IAAI;AACnB,YAAMC,UAAU,GAAGT,UAAU,CAACQ,CAAD,EAAIX,cAAJ,CAA7B;AACAK,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,MAAAA,OAAO,CAACC,OAAR,CAAgBF,UAAhB,EAA4BG,IAA5B,CAAiCC,UAAU,IAAI;AAC7CT,QAAAA,UAAU,CAACV,cAAc,CAACY,MAAM,CAACO,UAAD,CAAN,CAAmBL,CAAnB,CAAD,CAAf,CAAV;AACD,OAFD,EAEGM,OAFH,CAEW,MAAMZ,WAAW,CAAC,KAAD,CAF5B;AAGD,KANc,EAMZJ,YANY,CAAf;AAOD,GAdoB,EAclB,CAACC,aAAD,EAAgBF,cAAhB,EAAgCG,UAAhC,EAA4CF,YAA5C,CAdkB,CAArB;AAeAR,EAAAA,SAAS,CAAC,MAAMc,UAAU,CAACP,cAAD,CAAjB,EAAmC,CAACA,cAAD,CAAnC,CAAT;AACAP,EAAAA,SAAS,CAAC,MAAMe,KAAK,CAACT,CAAD,CAAZ,EAAiB,CAACS,KAAD,EAAQT,CAAR,CAAjB,CAAT;AACA,SAAO;AACLO,IAAAA,OADK;AAELC,IAAAA,UAFK;AAGLH,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport debounce from './lib/debounce';\nimport flattenOptions from './lib/flattenOptions';\nexport default function useFetch(q, defaultOptions, {\n  debounceTime,\n  filterOptions,\n  getOptions\n}) {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState(() => flattenOptions(defaultOptions));\n  const fetch = useMemo(() => {\n    const filter = filterOptions || (op => () => op);\n\n    if (!getOptions) {\n      return s => setOptions(flattenOptions(filter(defaultOptions)(s)));\n    }\n\n    return debounce(s => {\n      const optionsReq = getOptions(s, defaultOptions);\n      setFetching(true);\n      Promise.resolve(optionsReq).then(newOptions => {\n        setOptions(flattenOptions(filter(newOptions)(s)));\n      }).finally(() => setFetching(false));\n    }, debounceTime);\n  }, [filterOptions, defaultOptions, getOptions, debounceTime]);\n  useEffect(() => setOptions(defaultOptions), [defaultOptions]);\n  useEffect(() => fetch(q), [fetch, q]);\n  return {\n    options,\n    setOptions,\n    fetching\n  };\n}"]},"metadata":{},"sourceType":"module"}