{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useEffect, useMemo, useState, useRef, useCallback } from 'react';\nimport groupOptions from './lib/groupOptions';\nimport getOptions from './lib/getOptions';\nimport getDisplayValue from './lib/getDisplayValue';\nimport useFetch from './useFetch';\nimport getValues from './lib/getValues';\nimport useHighlight from './useHighlight';\nexport default function useSelect({\n  value: defaultValue = null,\n  options: defaultOptions = [],\n  search: canSearch = false,\n  multiple = false,\n  disabled = false,\n  closeOnSelect = true,\n  getOptions: getOptionsFn = null,\n  filterOptions = null,\n  onChange = () => {},\n  onFocus = () => {},\n  onBlur = () => {},\n  debounce = 0\n}) {\n  const ref = useRef(null);\n  const [value, setValue] = useState(null);\n  const [search, setSearch] = useState('');\n  const [focus, setFocus] = useState(false);\n  const {\n    options,\n    fetching\n  } = useFetch(search, defaultOptions, {\n    getOptions: getOptionsFn,\n    filterOptions,\n    debounceTime: debounce\n  });\n  const onSelect = useCallback(newValue => {\n    const newOption = getOptions(newValue, value, Array.isArray(value) ? [...value, ...options] : options, multiple);\n    setValue(newOption);\n    onChange(getValues(newOption), newOption);\n\n    if (closeOnSelect) {\n      ref.current.blur();\n    }\n  }, [closeOnSelect, multiple, onChange, value, options]);\n  const [highlighted, keyboardEvents] = useHighlight(-1, options, onSelect, ref);\n  const snapshot = useMemo(() => ({\n    options: groupOptions(options),\n    option: value,\n    displayValue: getDisplayValue(value),\n    value: getValues(value),\n    search,\n    fetching,\n    focus,\n    highlighted,\n    disabled\n  }), [disabled, fetching, focus, highlighted, search, value, options]);\n  const onMouseDown = useCallback(e => {\n    e.preventDefault();\n    onSelect(e.currentTarget.value);\n  }, [onSelect]);\n  const onFocusCb = useCallback(e => {\n    setFocus(true);\n    onFocus(e);\n  }, [onFocus]);\n  const onBlurCb = useCallback(e => {\n    setFocus(false);\n    setSearch('');\n    onBlur(e);\n  }, [onBlur]);\n  const valueProps = useMemo(() => _extends({\n    tabIndex: '0',\n    readOnly: !canSearch\n  }, keyboardEvents, {\n    onFocus: onFocusCb,\n    onBlur: onBlurCb,\n    onChange: canSearch ? ({\n      target\n    }) => setSearch(target.value) : null,\n    disabled,\n    ref\n  }), [canSearch, keyboardEvents, onFocusCb, onBlurCb, disabled]);\n  const optionProps = useMemo(() => ({\n    tabIndex: '-1',\n    onMouseDown\n  }), [onMouseDown]);\n  useEffect(() => {\n    setValue(getOptions(defaultValue, null, options, multiple));\n  }, [defaultValue, multiple, options]);\n  return [snapshot, valueProps, optionProps, setValue];\n}","map":{"version":3,"sources":["/home/mayortom/OMDB/25-OMDB/node_modules/react-select-search/dist/esm/useSelect.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useEffect","useMemo","useState","useRef","useCallback","groupOptions","getOptions","getDisplayValue","useFetch","getValues","useHighlight","useSelect","value","defaultValue","options","defaultOptions","search","canSearch","multiple","disabled","closeOnSelect","getOptionsFn","filterOptions","onChange","onFocus","onBlur","debounce","ref","setValue","setSearch","focus","setFocus","fetching","debounceTime","onSelect","newValue","newOption","Array","isArray","current","blur","highlighted","keyboardEvents","snapshot","option","displayValue","onMouseDown","e","preventDefault","currentTarget","onFocusCb","onBlurCb","valueProps","tabIndex","readOnly","optionProps"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useEffect, useMemo, useState, useRef, useCallback } from 'react';\nimport groupOptions from './lib/groupOptions';\nimport getOptions from './lib/getOptions';\nimport getDisplayValue from './lib/getDisplayValue';\nimport useFetch from './useFetch';\nimport getValues from './lib/getValues';\nimport useHighlight from './useHighlight';\nexport default function useSelect({\n  value: defaultValue = null,\n  options: defaultOptions = [],\n  search: canSearch = false,\n  multiple = false,\n  disabled = false,\n  closeOnSelect = true,\n  getOptions: getOptionsFn = null,\n  filterOptions = null,\n  onChange = () => {},\n  onFocus = () => {},\n  onBlur = () => {},\n  debounce = 0\n}) {\n  const ref = useRef(null);\n  const [value, setValue] = useState(null);\n  const [search, setSearch] = useState('');\n  const [focus, setFocus] = useState(false);\n  const {\n    options,\n    fetching\n  } = useFetch(search, defaultOptions, {\n    getOptions: getOptionsFn,\n    filterOptions,\n    debounceTime: debounce\n  });\n  const onSelect = useCallback(newValue => {\n    const newOption = getOptions(newValue, value, Array.isArray(value) ? [...value, ...options] : options, multiple);\n    setValue(newOption);\n    onChange(getValues(newOption), newOption);\n\n    if (closeOnSelect) {\n      ref.current.blur();\n    }\n  }, [closeOnSelect, multiple, onChange, value, options]);\n  const [highlighted, keyboardEvents] = useHighlight(-1, options, onSelect, ref);\n  const snapshot = useMemo(() => ({\n    options: groupOptions(options),\n    option: value,\n    displayValue: getDisplayValue(value),\n    value: getValues(value),\n    search,\n    fetching,\n    focus,\n    highlighted,\n    disabled\n  }), [disabled, fetching, focus, highlighted, search, value, options]);\n  const onMouseDown = useCallback(e => {\n    e.preventDefault();\n    onSelect(e.currentTarget.value);\n  }, [onSelect]);\n  const onFocusCb = useCallback(e => {\n    setFocus(true);\n    onFocus(e);\n  }, [onFocus]);\n  const onBlurCb = useCallback(e => {\n    setFocus(false);\n    setSearch('');\n    onBlur(e);\n  }, [onBlur]);\n  const valueProps = useMemo(() => _extends({\n    tabIndex: '0',\n    readOnly: !canSearch\n  }, keyboardEvents, {\n    onFocus: onFocusCb,\n    onBlur: onBlurCb,\n    onChange: canSearch ? ({\n      target\n    }) => setSearch(target.value) : null,\n    disabled,\n    ref\n  }), [canSearch, keyboardEvents, onFocusCb, onBlurCb, disabled]);\n  const optionProps = useMemo(() => ({\n    tabIndex: '-1',\n    onMouseDown\n  }), [onMouseDown]);\n  useEffect(() => {\n    setValue(getOptions(defaultValue, null, options, multiple));\n  }, [defaultValue, multiple, options]);\n  return [snapshot, valueProps, optionProps, setValue];\n}"]},"metadata":{},"sourceType":"module"}